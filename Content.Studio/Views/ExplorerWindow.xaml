<avalon:DockableContent x:Class="Willcraftia.Content.Studio.Views.ExplorerWindow"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                        xmlns:avalon="clr-namespace:AvalonDock;assembly=AvalonDock"
                        xmlns:frameworkBehavior="clr-namespace:Willcraftia.Win.Framework.Behavior;assembly=Willcraftia.Win.Framework"
                        xmlns:frameworkMessaging="clr-namespace:Willcraftia.Win.Framework.Messaging;assembly=Willcraftia.Win.Framework"
                        xmlns:localViewModels="clr-namespace:Willcraftia.Content.Studio.ViewModels"
                        xmlns:local="clr-namespace:Willcraftia.Content.Studio.Views"
                        Height="400" Width="400">

    <DockPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="10" Width="200" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MaxWidth="Infinity" MinWidth="10" />
            </Grid.ColumnDefinitions>

            <TreeView Grid.Column="0" Name="DirectoryTreeView" ItemsSource="{Binding RootFolders}">
                <frameworkBehavior:CommandBehaviorCollection.Behaviors>
                    <frameworkBehavior:BehaviorBinding Event="SelectedItemChanged" Command="{Binding SelectFolderCommand}"
                                                       CommandParameter="{Binding ElementName=DirectoryTreeView, Path=SelectedItem}"/>
                </frameworkBehavior:CommandBehaviorCollection.Behaviors>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource ResourceKey={x:Type TreeViewItem}}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type localViewModels:ContentFolderViewModel}" ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Icon}" VerticalAlignment="Center" Width="16" Height="16" Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Create folder..." Command="{Binding CreateSubFolderCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <!--<TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="New..." Command="{Binding CurrentFolder.CreateSubFolderCommand}"/>
                        <MenuItem Header="Delete" Command="{Binding CurrentFolder.DeleteCommand}"/>
                    </ContextMenu>
                </TreeView.ContextMenu>-->
            </TreeView>

            <GridSplitter Grid.Column="1" ResizeDirection="Columns" HorizontalAlignment="Stretch" Margin="0" Width="3"/>

            <ListBox Grid.Column="2" Name="FileListBox" ItemsSource="{Binding CurrentFolder.Files}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ResourceKey={x:Type ListBoxItem}}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem Header="Edit" Command="{Binding EditCommand}"/>
                                    <MenuItem Header="View" Command="{Binding ViewCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="Register as asset..." Command="{Binding RegisterAsAssetCommand}"/>
                                    <MenuItem Header="Edit as asset" Command="{Binding EditAssetCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="Unregister as asset" Command="{Binding UnregisterAsAssetCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.Resources>
                    <Style TargetType="TextBlock" x:Key="FileNameTextBlock" BasedOn="{StaticResource ResourceKey={x:Type TextBlock}}">
                        <Style.Setters>
                            <Setter Property="Foreground" Value="Blue"/>
                        </Style.Setters>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAsset}" Value="False">
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <DataTemplate DataType="{x:Type localViewModels:ContentFileViewModel}">
                        <StackPanel Orientation="Horizontal" Margin="4">
                            <Image Source="{Binding Icon}" VerticalAlignment="Center" Width="16" Height="16" Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding FileName}" VerticalAlignment="Center" Style="{StaticResource FileNameTextBlock}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.Resources>
            </ListBox>

        </Grid>
    </DockPanel>

</avalon:DockableContent>
